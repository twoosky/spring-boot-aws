plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

//group 'org.example'
group 'com.haneul.study'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

// repositories: 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 결정
repositories {
    mavenCentral() // 기본적으로 많이 사용 (라이브러리 업로드 위해 많은 과정과 설정 필요)
    // jcenter() // 라이브러리 업로드 간단 (jcenter에 업로드하면 mavenCentral에도 업로드될 수 있도록 자동화 가능) ... 서비스 종료되었다네 ..
}

// JUnit: Java에서 테스트 코드 작성을 도와주는 프레임워크
test {
    useJUnitPlatform()
}

// dependencies: 프로젝트 개발에 필요한 의존성들을 선언하는 곳
dependencies {
    // 기존
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    // 추가
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    //jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.mariadb.jdbc:mariadb-java-client")
    runtime('com.h2database:h2')

    // security
    // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성
    // spring-security-oauth2-client와 spring-security-oauth2-jose를 기본적으로 관리해줌
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    testImplementation("org.springframework.security:spring-security-test")    // 시큐리티 테스트 관련 의존성

    // 세션(로그인 사용자 정보) 저장소를 jdbc 데이터베이스로 설정
    implementation('org.springframework.session:spring-session-jdbc')

}